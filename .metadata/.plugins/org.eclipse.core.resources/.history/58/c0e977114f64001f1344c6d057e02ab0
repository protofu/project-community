package com.kosta.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.kosta.entity.Project;
import com.kosta.entity.User;
import com.kosta.service.ProjectService;
import com.kosta.service.UserService;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
@RequestMapping("/project/*")
public class ProjectController {
	private final ProjectService projectService;
	private final UserService userService;
	
	@GetMapping("/list")
	public String listPage(Model model, @AuthenticationPrincipal User user) {
		List<Project> projectList = projectService.findAll();
		model.addAttribute("list", projectList);
		model.addAttribute("user", user);
		return "project/list";
	}
	
	@GetMapping("/add")
	public String addPage(Principal principal, Model model) {
		String username = principal.getName();
		User user = userService.findByUsername(username);
		model.addAttribute("user", user);
		return "project/add";
	}
	
	@PostMapping("/add")
	public String add(Project project, @RequestParam("maintainerId") Long maintainerId) {
		User maintainer = userService.findById(maintainerId);
		project.setMaintainer(maintainer);
		System.out.println(project.getStartAt());
		projectService.save(project);
		return "redirect:/project/list";
	}
	
	@DeleteMapping("/delete")
	public String delete(@RequestParam("id") Long id) {
		projectService.delete(id);
		return "redirect:/project/list";
	}
	
	@GetMapping("/edit")
	public String editPage(@RequestParam("id") Long id, Principal principal, Model model) {
		String username = principal.getName();
		User user = userService.findByUsername(username);
		Project project = projectService.findById(id);
		model.addAttribute("user", user);
		model.addAttribute("project", project);
		return "project/add";
	}
	
	@PostMapping("/edit")
	public String edit(@RequestParam("id") Long id, Project project) {
		User maintainer = userService.findById(maintainerId);
		project.setMaintainer(maintainer);
		System.out.println(project.getStartAt());
		projectService.save(project);
		return "redirect:/project/list";
	}
}
