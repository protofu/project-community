package com.kosta.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.util.matcher.AntPathRequestMatcher;

import lombok.RequiredArgsConstructor;

@Configuration
@EnableWebSecurity
@RequiredArgsConstructor
public class WebSecurityConfig {

	// HTTP 요청에 따른 보안 구성
	// 개발 초기 모두 열어놓기
	@Bean
	SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
		return http.authorizeHttpRequests(auth -> 
			auth.requestMatchers(
					new AntPathRequestMatcher("/"),
					new AntPathRequestMatcher("/err"),
					new AntPathRequestMatcher("/project/list"),
					new AntPathRequestMatcher("/community/list")
				).permitAll()
					// MEMBER
					.requestMatchers(
						new AntPathRequestMatcher("/myproject/**"),
						new AntPathRequestMatcher("/project/**"),
						new AntPathRequestMatcher("/community/**")
					).hasAnyRole("MEMBER", "MAINTAINER")
					.requestMatchers(
						new AntPathRequestMatcher("/maintain/**")
					).hasRole("MAINTAINER")
					
					
				.anyRequest().authenticated()
			).build();
	}
	
}
